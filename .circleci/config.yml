version: 2


presets:
  defaults: &defaults
    working_directory: ~/src
    docker:
      - image: circleci/buildpack-deps:trusty
    environment:
      BUILDDIR: build
      VENVDIR: venv

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}-
        - v1-repo-

  restore_venv_py36: &restore_venv_py36
    restore_cache:
      keys:
        - v1-venv-py36-{{ checksum "setup.py" }}
        - v1-venv-py36-

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - v1-node-modules-{{ checksum "yarn.lock" }}
        - v1-node-modules-

  restore_docker_image: &restore_docker_image
    restore_cache:
      keys:
        - v1-docker-image-{{ checksum "Dockerfile" }}
        - v1-docker-image-


jobs:
  checkout_code:
    <<: *defaults
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  test_py36:
    <<: *defaults
    docker:
      - image: circleci/python:3.6
      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: fanboi2
          POSTGRES_DB: fanboi2_test
    steps:
      - *restore_repo
      - *restore_venv_py36
      - run:
          name: Install dependencies
          command: make prod
      - save_cache:
          key: v1-venv-py36-{{ checksum "setup.py" }}
          paths:
            - venv
      - run:
          name: Run tests
          command: make test
          environment:
            POSTGRESQL_TEST_DATABASE: postgres://fanboi2:@localhost:5432/fanboi2_test

  test_assets:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - *restore_repo
      - *restore_node_modules
      - run:
          name: Install dependencies
          command: make node_modules
      - save_cache:
          key: v1-node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build assets
          command: make assets

  build_docker:
    <<: *defaults
    docker:
      - image: circleci/buildpack-deps:trusty
    steps:
      - setup_remote_docker
      - *restore_repo
      - *restore_docker_image
      - run:
          name: Load Docker image layer cache
          command: |
            docker load -i ~/caches/docker-layers.tar || true
      - run:
          name: Build Docker image
          command: |
            docker build \
              --target assets \
              --cache-from=forloopend/fanboi2-assets \
              -t forloopend/fanboi2-assets .
            docker build \
              --cache-from=forloopend/fanboi2 \
              -t forloopend/fanboi2 .
      - run:
          name: Create Docker image layer cache
          command: |
            mkdir -p ~/caches
            docker save -o \
              ~/caches/docker-layers.tar \
              forloopend/fanboi2 \
              forloopend/fanboi2-assets
      - save_cache:
          paths:
            - ~/caches/docker-layers.tar
          key: v1-docker-image-{{ checksum "Dockerfile" }}
      - run:
          name: Run PostgreSQL for tests
          command: |
            docker network create net0
            docker run --name db --net net0 -d -p 5432:5432 \
              -e POSTGRES_USER=fanboi2 \
              -e POSTGRES_DB=fanboi2_test \
              postgres:10-alpine
      - run:
          name: Run tests
          command: |
            docker run --net net0 \
              -e POSTGRESQL_TEST_DATABASE=postgres://fanboi2:@db:5432/fanboi2_test \
              forloopend/fanboi2 \
              make test
      - run:
          name: Publishing Docker image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            IMAGE_TAG=""
            if [ -n "$CIRCLE_TAG" ]; then
                _ver="${CIRCLE_TAG#*v}"
                if [ -n "$CIRCLE_REPOSITORY_URL" ] && [ -n "$CIRCLE_SHA1" ]; then
                    _ref="refs/heads/master"
                    _head="$(git ls-remote "$CIRCLE_REPOSITORY_URL" "$_ref" | awk '{ print $1 }')"
                    if [ "$CIRCLE_SHA1" = "$_head" ]; then
                        IMAGE_TAG="stable $IMAGE_TAG"
                    fi
                fi
            elif [ "$CIRCLE_BRANCH" = "master" ]; then
                IMAGE_TAG="latest"
                IMAGE_TAG="$(git rev-parse --short HEAD) $IMAGE_TAG"
            fi
            for tag in $IMAGE_TAG; do
                docker tag "forloopend/fanboi2" "forloopend/fanboi2:$tag"
                docker push "forloopend/fanboi2:$tag"
            done


  deploy:
    <<: *defaults
    docker:
      - image: circleci/python:3.6-node
    steps:
      - *restore_repo
      - *restore_venv_py36
      - *restore_node_modules
      - run:
          name: Install deploy dependencies
          command: make deploy
      - run:
          name: Deploy to Fanboi Channel
          command: |
            venv/bin/fbdeploy \
              --path=/srv/fanboi2 \
              --user=fanboi2 \
              --postcmd="/srv/fanboi2/postcmd" \
              $DEPLOY_HOSTS


workflows:
  version: 2
  test_all:
    jobs:
      - checkout_code
      - test_py36:
          requires:
            - checkout_code
      - test_assets:
          requires:
            - checkout_code
      - build_docker:
          requires:
            - test_py36
            - test_assets
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test_py36
            - test_assets
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v.*/
