version: 2

presets:
  defaults: &defaults
    working_directory: ~/fanboi2
    docker:
      - image: circleci/python:3.6

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}-
        - v1-repo-

  restore_venv_py36: &restore_py36_venv
    restore_cache:
      keys:
        - v1-venv-py36-{{ checksum "setup.py" }}
        - v1-venv-py36-

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - v1-node-modules-{{ checksum "yarn.lock" }}
        - v1-node-modules-

  restore_docker_image: &restore_docker_image
    restore_cache:
      keys:
        - v1-docker-image-{{ checksum "Dockerfile" }}
        - v1-docker-image-

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  test_py36:
    <<: *defaults
    docker:
      - image: circleci/python:3.6
      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: fanboi2
          POSTGRES_DB: fanboi2_test
    steps:
      - *restore_repo
      - *restore_venv_py36
      - run:
          name: Install dependencies
          command: make .build/.build-test
      - save_cache:
          key: v1-venv-py36-{{ checksum "setup.py" }}
          paths:
            - .venv
      - run:
          name: Run tests
          command: make test
          environment:
            POSTGRESQL_TEST_DATABASE: postgres://fanboi2:@localhost:5432/fanboi2_test

  test_assets:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - *restore_repo
      - *restore_node_modules
      - run:
          name: Install dependencies
          command: make node_modules
      - save_cache:
          key: v1-node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build assets
          command: make assets

  build_docker:
    <<: *defaults
    docker:
      - image: docker:latest
    steps:
      - run:
          name: Install Docker dependencies
          command: |
            set -xe
            apk add --update --no-cache tar
      - *restore_repo
      - *restore_docker_image
      - run:
          name: Build Docker image
          command: docker build --cache-from=forloopend/fanboi2 -t forloopend/fanboi2 .
      - run:
          name: Create Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/docker-layers.tar forloopend/fanboi2
      - save_cache:
          paths:
            - /caches/docker-layers.tar
          key: v1-docker-image-{{ checksum "Dockerfile" }}
      - run:
          name: Run PostgreSQL for tests
          command: |
            docker run -d -p 5432:5432 \
            -e POSTGRES_USER=fanboi2 \
            -e POSTGRES_DB=fanboi2_test \
            -e POSTGRESQL_TEST_DATABASE=postgres://fanboi2:@127.0.0.1:5432/fanboi2_test \
            postgres:10-alpine
      - run:
          name: Run tests
          command: |
            docker run forloopend/fanboi2 \
            make test

workflows:
  version: 2
  test_all:
    jobs:
      - checkout_code
      - test_py36:
          requires:
            - checkout_code
      - test_assets:
          requires:
            - checkout_code
      - build_docker:
          requires:
            - test_py36
            - test_assets
