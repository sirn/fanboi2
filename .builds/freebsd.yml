---
image: freebsd/latest
packages:
  - google-cloud-sdk
  - node20
  - npm-node20
  - postgresql14-client
  - postgresql14-server
  - py311-pip
  - py311-sqlite3
  - python311
  - rust
sources:
  - https://git.sr.ht/~sirn/fanboi2
secrets:
  - 1d90529f-f66a-44bb-b5db-b41b255df8c2
environment:
  CURRENT_REF: refs/heads/main
  CURRENT_REPO: https://git.sr.ht/~sirn/fanboi2
tasks:
  - setup: |
      cd fanboi2/ || exit 1
      export PATH=$HOME/.local/bin:$PATH

      npm set prefix="$HOME/.local"
      npm install -g pnpm

      sudo service postgresql oneinitdb
      sudo sysrc postgresql_enable=YES
      sudo sysrc postgresql_flags="-l /var/log/postgresql.log"

      cat <<EOF | sudo tee /var/db/postgres/data14/pg_hba.conf
      local all all trust
      host all all 127.0.0.1/32 trust
      host all all ::1/128 trust
      EOF

      sudo touch /var/log/postgresql.log
      sudo chown postgres /var/log/postgresql.log
      sudo service postgresql start
      sudo -u postgres createuser -ds fanboi2
      sudo -u postgres createdb -U fanboi2 fanboi2_test
  - build: |
      cd fanboi2/ || exit 1
      export PATH=$HOME/.local/bin:$PATH
      export PYTHON=/usr/local/bin/python3.11

      NEW_VERSION=$(./tools/scripts/gen-version.sh)
      ./tools/scripts/update-version.sh "$NEW_VERSION"

      pnpm install
      make assets
  - test: |
      cd fanboi2/ || exit 1
      export PATH=$HOME/.local/bin:$PATH
      export VENVDIR=$HOME/venv
      export PYTHON=/usr/local/bin/python3.11
      export POSTGRESQL_TEST_DATABASE="postgresql://fanboi2:@localhost:5432/fanboi2_test"

      make test
  - package: |
      cd fanboi2/ || exit 1
      export PATH=$HOME/.local/bin:$PATH
      export VENVDIR=$HOME/venv
      export PYTHON=/usr/local/bin/python3.11

      gcloud auth activate-service-account --key-file ~/.local/etc/google_service_account.json
      bmake dist

      DIST_NAME=$(ls -t1 dist | head -n1)
      gsutil cp dist/"$DIST_NAME" gs://artifacts.fanboi.ch/dist/"$DIST_NAME"

      LOCAL_REF=$(git rev-parse HEAD)
      REMOTE_REF=$(git ls-remote $CURRENT_REPO $CURRENT_REF | awk '{ print $1 }')
      if [ "$LOCAL_REF" = "$REMOTE_REF" ]; then
          echo "$DIST_NAME" > CURRENT
          gsutil cp CURRENT gs://artifacts.fanboi.ch/dist/CURRENT
      fi

      if [ -n "$(git tag --points-at HEAD)" ]; then
          echo "$DIST_NAME" > RELEASE
          gsutil cp RELEASE gs://artifacts.fanboi.ch/dist/RELEASE
      fi
