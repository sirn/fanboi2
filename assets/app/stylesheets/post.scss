@use "sass:math";
@import "variables";
@import "mixins";

$post-item-spacing: 5px;
$post-gap-spacing: $spacing-vertical;

$thumbnail-width: 90px;
$thumbnail-height: 90px;
$thumbnail-gap-vertical: $spacing-vertical-smaller;
$thumbnail-gap-horizontal: $spacing-horizontal-smaller;
$thumbnails-margin-vertical: $spacing-vertical - $thumbnail-gap-vertical;

/* Post
 * ------------------------------------------------------------------------ */

.post {
    border-bottom: 1px solid;
    margin: 0;
    overflow-x: auto;
    overflow-y: hidden;
    position: relative;

    /* Extra padding values for date part which is set via absolute positioning
     * due to requirement to inline while on desktop. Padding is calculated
     * from an absolute spacing plus calculated total line height, i.e.
     *
     *   (post-gap-spacing + spacing-vertical + (font-size * line-height)) 
     * 
     * however since we defined font-size and line-height with rem, we need to
     * first convert post-gap-spacing + spacing-vertical into rem first */
    $rel-bottom: math.div($post-gap-spacing + $spacing-vertical, $font-size-base);
    /* rem*rem also doesn't work, we had to convert rem to unitless first */
    $rel-height: math.div($line-height, 1rem) * $font-size-small;
    padding: $post-gap-spacing 0 ($rel-bottom + $rel-height);

    @media (min-width: $bound-tablet) {
        padding: $post-gap-spacing 0;
    }
}

.post-header {
    @include clearfix();
    font-size: $font-size-small;
    line-height: $line-height;
    margin: 0 0 $spacing-vertical;
}

.post-header-item {
    display: block;
    float: left;
    margin: 0;
    padding: 1px 0;

    & + & {
        margin-left: $spacing-horizontal-small;
    }

    &.number {
        border-radius: 2px;
        border: 1px solid;
        cursor: pointer;
        padding: 0 ($post-item-spacing - 1);
    }

    &.name {
        border-radius: 2px;
        padding: 1px $post-item-spacing;
    }

    &.date {
        bottom: $post-gap-spacing;
        font-size: $font-size-small;
        font-style: italic;
        line-height: $line-height;
        position: absolute;
        margin: 0;
    }

    &.ident-admin {
        padding: 1px $post-item-spacing;
    }

    @media (min-width: $bound-tablet) {
        &.date {
            font-size: inherit;
            font-style: inherit;
            position: inherit;
            margin-left: $spacing-horizontal-small;
        }
    }
}

.post-body {
    font-size: $font-size;
    line-height: $line-height;
    margin: 0;

    p {
        margin: 0;

        + p {
            margin: $spacing-vertical 0 0;
        }

        &.thumbnails {
            @include clearfix();
            display: block;
            margin: $spacing-vertical 0 (-$thumbnail-gap-vertical);
        }

        &.shortened {
            font-size: $font-size-small;
            font-style: italic;
            line-height: $line-height;
        }
    }

    a.anchor {
        /* Noop */
    }

    a.thumbnail {
        display: block;
        float: left;
        height: $thumbnail-height;
        margin: 0 $thumbnail-gap-vertical $thumbnail-gap-horizontal 0;
        overflow: hidden;
        position: relative;
        text-align: center;
        width: $thumbnail-width;

        img {
            left: 50%;
            max-height: $thumbnail-height;
            object-fit: cover;
            position: absolute;
            top: 50%;
            transform: translate(-50%, -50%);
        }
    }

    @media (min-width: $bound-tablet) {
        p.shortened {
            margin: $spacing-vertical-small 0 0;
        }
    }
}
